#\---------------
# Functions
#/---------------

# Clear the screen with some information
function :clear {

	clear;
	printf "\n+--------------------------------+\n| ";
	pwd;
	printf " : ";
	date;
	printf "+--------------------------------+\n\n";

	EXPECTED_ARGS=2
	if [ $# -lt $EXPECTED_ARGS ];
	then
		ls -lah --color=always;
	else
		case "$2" in
			-h | --help)
				printf "Usage: $1 [options] [URL] \nURL: The target path to show info on\nOptions:\n
\t t,   travelto\t\tSame as -t.
\t-t, --traverse\t\tNavigate to the specified folder.
\t-h, --help\t\tDisplay this information.
\t-n, --empty\t\tDisplays nothing but current directory.
\t-c, --clear-display\tDisplay just some information (will not work if 'dir' is not available).\n

";
				;;
			-a | --append)
				:clear $1 -s
				if [ -z "$3" ];
				then
					printf "\n";
					ls -lah --color=always -t | tail -n +2
				else
					printf "\n"
					ls -lah $3 --color=always -t | tail -n +2
				fi
				;;
			-q | --qoute)
				:clear $1 -s
				printf "\n";
				fortune;
				printf "\n";
				;;
			-n | --empty)
				printf "\n";
				;;
			-c | --clear-display)
				dir;
				printf "\n";
				;;
			s | -s | --show-dir)
				if [ -z "$3" ];
				then
					ls -lah --color=always;
				else
					ls -lah $3 --color=always;
				fi
				;;
			-st | -ts)
				if [ -z "$3" ];
				then
					ls -lath --color=always;
				else
					ls -lath --color=always;
				fi
				;;
			u | -u | --up | travelup)
				if [ -z "$3" ];
				then
					cd ..;
					:clear $1 -s;
				else
					for (( i=0; i<$3; i++ ))
	 				 do
						cd ..;
					 done

					:clear $1 -s;
				fi
				;;
			-t | t | travelto)
				if [ -z "$3" ];
				then
					:clear $1 $3;
				else
					:clear $1;
				fi
			;;
			*)
				if [ -z "$2" ];
				then
					:clear $1 -s;
				else
					cd $2;
					:clear $1 -s;
				fi
				;;
		esac
	fi

}

# Update this source file with the most recent at github
# Not yet done. Do not use yet.
function :update {

	if [ $# -gt 0 ];
	then
		case "$1" in
			-i | --init-new)
				cd ~
				rm -Rf .bash
				:update -a
			;;
			-a | --create-dir)
				mkdir ~/.bash
				cd ~/.bash
				git init
				:update -p
			;;
			-p | --pull-repo)
				cd ~/.bash
				git remote add bash git@github.com:Defavlt/.bash.git
				git pull bash master
				ln -s ~/.bash/.rc ~/.bashrc
			;;
			-h | --help | *)
				printf "Usage: :update (-i | -a)\n\t-i, --init-new\n\t\tRemoves the already existing ~/.bash-directory, adds a new ~/.bash-directory and inits and pulls the git repo.\n\t-a, --create-dir\n\t\tCreates a new ~/.bash-directory and inits and pulls the git repo.\n\t-p, --pull-repo\n\\tPulls the git repo and creates a symlink to ~/.bashrc.\n"
			;;
		esac
	else
		printf "Wrong argument/s and/or amount of arguments."
		printf "\nUsage: :update -h\n";
	fi

}

function wiki () {
	if [ $# -gt 0 ];
	then
		dig +short txt $1.wp.dg.cx
	else
		printf "\nUsage: wiki SUBJECT\n";
	fi
}

# Remove $2 and mv and link $1 to $2
function pullcarpet() {
	
	if [ $# -eq 2 ];
	then 

		sudo rm $2
		sudo mv $1 $2
		sudo ln -s $2 $1

	fi
}

function search () {
	
	if [ $# -gt 1 ];
	then
		case "$1" in
			-n | --lines)
				if [ $# -eq 3 ];
				then
					sudo awk "$2"' { count++ } END { printf count;printf "\n";}' $3
				else
					search;
				fi
			;;
			*)
				if [ $# -eq 2 ];
				then
					sudo awk -Fs "$1" $2;
				elif [ $# -gt 2 ];
				then
					sudo awk -Fs $1 $2 $3;
				else
					search;
				fi
			;;
		esac
	else
		printf "Usage: [-n] search file\n"
	fi
}

function luser () {

	if [ $# -lt 1 ];
	then
		users;
	else
		case "$1" in
			-a | --active)
				luser;
			;;
			-l | --all)
				cat /etc/passwd | cut -d: -f1;
			;;
			-r | --real)
				cat /etc/passwd | cut -d: -f5;
			;;
			-h | --help)
				printf "Usage: luser [-a | -l | -r | -h] \n";
			;;
			*)
				luser -h;
			;;
		esac
	fi
}

#\---------------
# Shortcuts
#/---------------

#Navigational
alias ls='ls -lah --color=always'
alias cls=':clear cls'
alias ww='cls /var/www'
alias expert='ww;cls apps.k2c.se_ssl/crm/expert/'

#Other/Misc
alias marcus='sudo chown marcus'
alias lnh='ln --help | head --lines=1'
alias pc='pullcarpet'

#Loading of .rc-files
alias charc='vi ~/.bashrc'
alias sourc='source ~/.bashrc'

#Settings
export PS1="\[\033[01;33m\]\u@\\h:\[\033[01;34m\]\w\$\[\033[00m\]:; ";
export HISTCONTROL=erasedups

#Add other scripts
source /etc/bash_completion.d/git;
